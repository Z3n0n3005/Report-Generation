services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
  worker:
    build: 
      context: ./
      dockerfile: ./docker/worker/Dockerfile
    command: celery -A src.celery_app worker --loglevel=DEBUG
    # command: ls /code
    depends_on:
      - redis
    # volumes:
    #   - .:/code
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /code/src
          ignore:
           - ./src/__pycache__
           - ./src/log/__pycache__
           - ./src/benchmark/__pycache__
           - ./src/tasks/__pycache__

  grobid-server:
    image: "lfoppiano/grobid:0.8.0"
    ports:
      - "8070:8070"  # Map host port 8080 to container port 8070
      - "8071:8071"  # Map host port 8081 to container port 8071
    init: true       # Equivalent of --init
    ulimits:         # Set ulimit core=0
      core:
        soft: 0
        hard: 0
    deploy:
      restart_policy:
        condition: none  # Approximate equivalent of --rm

  summary-server:
    build:
      context: ./
      dockerfile: ./docker/summary-server/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - grobid-server
      - redis
      - worker
    healthcheck:
      test: ["CMD", "wget", "-q", "http://grobid-server:8070/"]
      interval: 5s
      retries: 30
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /code/src
          ignore:
           - ./src/__pycache__
           - ./src/log/__pycache__
           - ./src/benchmark/__pycache__
           - ./src/tasks/__pycache__